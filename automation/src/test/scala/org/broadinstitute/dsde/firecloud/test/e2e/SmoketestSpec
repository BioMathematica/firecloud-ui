package org.broadinstitute.dsde.firecloud.test.e2e

import org.broadinstitute.dsde.firecloud.config.SmoketestConfig
import org.broadinstitute.dsde.firecloud.fixture.WorkspaceFixtures
import org.broadinstitute.dsde.firecloud.page.workspaces.WorkspaceSummaryPage
import org.broadinstitute.dsde.firecloud.test.WebBrowserSpec

class SmoketestSpec extends FreeSpec with WebBrowserSpec with WorkspaceFixtures {
  // todo: add with cleanup; we want to cleanup workspace and any objects created by test

  val billingProject: String = SmoketestConfig.Projects.default

  "Smoketest 1" in withWebDriver { implicit driver =>

    // login
    var listPageAsUser = signIn(SmoketestConfig.Users.testuser)
    assert(listPageAsUser.readUserEmail().equals(Config.Users.testuser))

    // create workspace
    val workspaceName = "Smoketests_create_" + randomUuid
    val detailPage = listPage.createWorkspace(billingProject, workspaceName).awaitLoaded()

    detailPage.ui.readWorkspaceName shouldEqual workspaceName
    listPage.open
    listPage.filter(workspaceName)
    listPage.ui.hasWorkspace(billingProject, workspaceName) shouldBe true

    // go to library

    // find library dataset

    // use dataset to create new workspace

    // import known method config

    // run method config on data in workspace

    // turn off call caching

    // wait for job to complete

    // delete workspace

    // logout



  }

}